{
  "name": "rest-express",
  "version": "1.0.0",
  "type": "module",
  "license": "MIT",
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "dev": "cross-env NODE_ENV=development tsx server/index.ts",
    "dev:client": "cross-env NODE_ENV=development vite",
    "dev:full": "concurrently \"npm run dev\" \"npm run dev:client\"",
    "dev:electron": "concurrently \"npm run dev:client\" \"wait-on http://localhost:5173 && cd electron && npm run dev\"",
    "build": "vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
    "build:electron": "npm run build && cd electron && npm run build",
    "build:analyze": "npm run build && node scripts/bundle-analyzer.cjs",
    "build:analyze-bundle": "npm run build && node scripts/performance-analyzer.js --bundle-analyzer",
    "start": "cross-env NODE_ENV=production node dist/index.js",
    "start:electron": "cd electron && npm run start",
    "dist:electron": "npm run build:electron && cd electron && npm run dist",
    "check": "tsc",
    "db:push": "drizzle-kit push",
    "clean": "rimraf dist node_modules/.cache",
    "clean:electron": "rimraf electron/dist electron/dist-electron",
    "lint": "eslint . --ext .ts,.tsx --fix",
    "lint:strict": "eslint . --ext .ts,.tsx --fix --max-warnings 0",
    "remove-console-logs": "node scripts/remove-console-logs.js",
    "check-console-logs": "node scripts/check-console-logs.js",
    "fix-typescript-types": "node scripts/fix-typescript-types.js",
    "security-fix": "node scripts/security-fix.cjs",
    "type-check": "tsc --noEmit",
    "type-check:strict": "tsc --noEmit --strict",
    "check-all": "npm run type-check && npm run lint",
    "fix-typescript": "node scripts/fix-typescript-errors.js",
    "test": "cd client && tsx tests/test-runner.ts",
    "test:all": "cd client && tsx tests/test-runner.ts",
    "test:unit": "cd client && tsx tests/test-runner.ts unit",
    "test:integration": "cd client && tsx tests/test-runner.ts integration",
    "test:e2e": "cd client && tsx tests/test-runner.ts e2e",
    "test:performance": "vitest run --config tests/vitest.config.ts tests/performance/",
    "test:accessibility": "cd client && tsx tests/test-runner.ts accessibility",
    "test:client": "cd client && vitest",
    "test:client:run": "cd client && vitest run",
    "test:client:coverage": "cd client && vitest run --coverage",
    "test:client:ui": "cd client && vitest --ui",
    "test:client:watch": "cd client && vitest --watch",
    "test:server": "vitest --config tests/vitest.config.ts",
    "test:server:run": "vitest run --config tests/vitest.config.ts",
    "test:server:coverage": "vitest run --coverage --config tests/vitest.config.ts",
    "test:api": "vitest --config tests/vitest.config.ts",
    "test:api:run": "vitest run --config tests/vitest.config.ts",
    "test:performance:report": "vitest run --config tests/vitest.config.ts tests/performance/ --reporter=html --reporter=json",
    "test:coverage": "npm run test:client:coverage && npm run test:server:coverage",
    "test:report": "node scripts/run-tests.js report",
    "test:clean": "node scripts/run-tests.js clean",
    "test:components": "cd client && vitest run tests/components/",
    "test:api-integration": "cd client && vitest run tests/api/",
    "test:concurrent": "cd client && vitest run tests/performance/concurrent-requests.test.ts",
    "test:comprehensive": "cd client && vitest run tests/components/ComprehensiveComponentTests.test.tsx tests/api/EnhancedAPITests.test.ts tests/performance/concurrent-requests.test.ts",
    "test:enhanced-runner": "cd client && vitest run tests/test-runner-enhanced.ts",
    "test:coverage-full": "cd client && vitest run --coverage --reporter=html --reporter=json",
    "test:performance-full": "cd client && vitest run tests/performance/ --reporter=html --reporter=json",
    "test:api-full": "cd client && vitest run tests/api/ --reporter=html --reporter=json",
    "test:components-full": "cd client && vitest run tests/components/ --reporter=html --reporter=json",
    "quality:check": "node scripts/quality-monitor.js",
    "quality:report": "npm run quality:check && cat quality-report.json",
    "quality:dashboard": "npm run quality:check && echo 'Quality report generated. View at quality-report.json'",
    "quality:fix": "npm run lint -- --fix && npm run type-check",
    "test:ui": "cd client && vitest --ui",
    "test:run": "cd client && vitest run",
    "test:pwa": "npm run test:pwa:install && npm run test:pwa:offline && npm run test:pwa:notifications",
    "test:pwa:install": "node scripts/test-pwa-install.js",
    "test:pwa:offline": "node scripts/test-pwa-offline.js",
    "test:pwa:notifications": "node scripts/test-pwa-notifications.js",
    "test:mobile:android": "node scripts/test-mobile-android.js",
    "test:mobile:ios": "node scripts/test-mobile-ios.js",
    "test:mobile:responsive": "node scripts/test-mobile-responsive.js",
    "test:desktop": "npm run test:desktop:cross-platform && npm run test:desktop:performance",
    "test:desktop:cross-platform": "node scripts/test-desktop-cross-platform.js",
    "test:desktop:performance": "node scripts/test-desktop-performance.js",
    "test:desktop:updates": "node scripts/test-desktop-updates.js",
    "test:desktop:installer": "node scripts/test-desktop-installer.js",
    "debug:sw": "node scripts/debug-service-worker.js",
    "debug:pwa": "node scripts/debug-pwa.js",
    "debug:mobile": "node scripts/debug-mobile.js",
    "debug:electron": "node scripts/debug-electron.js",
    "debug:main": "node scripts/debug-main-process.js",
    "debug:renderer": "node scripts/debug-renderer-process.js",
    "debug:updates": "node scripts/debug-updates.js",
    "analyze": "node scripts/performance-analyzer.js --analyze",
    "analyze:bundle": "node scripts/performance-analyzer.js --bundle-analyzer",
    "build:test": "node scripts/build-without-ai.js",
    "docs:generate": "jsdoc -c jsdoc.json",
    "docs:serve": "jsdoc -c jsdoc.json",
    "docs:watch": "jsdoc -c jsdoc.json --watch",
    "docs:swagger": "npm run dev & sleep 5 && open http://localhost:3000/api-docs",
    "docs:all": "npm run docs:generate && npm run docs:swagger"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.37.0",
    "@hookform/resolvers": "^3.10.0",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.10.4",
    "@radix-ui/react-accordion": "^1.2.4",
    "@radix-ui/react-alert-dialog": "^1.1.7",
    "@radix-ui/react-aspect-ratio": "^1.1.3",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.1.5",
    "@radix-ui/react-collapsible": "^1.1.4",
    "@radix-ui/react-context-menu": "^2.2.7",
    "@radix-ui/react-dialog": "^1.1.7",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-hover-card": "^1.1.7",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.3",
    "@radix-ui/react-menubar": "^1.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.6",
    "@radix-ui/react-popover": "^1.1.7",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.2.4",
    "@radix-ui/react-scroll-area": "^1.2.4",
    "@radix-ui/react-select": "^2.1.7",
    "@radix-ui/react-separator": "^1.1.3",
    "@radix-ui/react-slider": "^1.2.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-switch": "^1.1.4",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.7",
    "@radix-ui/react-toggle": "^1.1.3",
    "@radix-ui/react-toggle-group": "^1.1.3",
    "@radix-ui/react-tooltip": "^1.2.0",
    "@tailwindcss/postcss": "^4.1.11",
    "@tanstack/react-query": "^5.60.5",
    "@tanstack/react-query-devtools": "^5.60.5",
    "@tanstack/react-table": "^8.21.3",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/memoizee": "^0.4.12",
    "ai": "^5.0.2",
    "bcryptjs": "^3.0.2",
    "better-sqlite3": "^12.2.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "concurrently": "^9.2.0",
    "connect-pg-simple": "^10.0.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "csurf": "^1.11.0",
    "date-fns": "^3.6.0",
    "drizzle-orm": "^0.39.1",
    "drizzle-zod": "^0.7.0",
    "electron": "^37.2.4",
    "electron-builder": "^26.0.12",
    "embla-carousel-react": "^8.6.0",
    "express": "^4.21.2",
    "express-rate-limit": "^8.0.1",
    "express-session": "^1.18.1",
    "framer-motion": "^11.13.1",
    "helmet": "^8.1.0",
    "input-otp": "^1.4.2",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.453.0",
    "memoizee": "^0.4.17",
    "memorystore": "^1.6.7",
    "next-themes": "^0.4.6",
    "nodemailer": "^7.0.5",
    "openai": "^5.10.2",
    "openid-client": "^6.6.2",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-dropzone": "^14.3.8",
    "react-helmet-async": "^2.0.5",
    "react-hook-form": "^7.55.0",
    "react-icons": "^5.4.0",
    "react-resizable-panels": "^2.1.7",
    "recharts": "^2.15.4",
    "supertest": "^7.0.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "taffydb": "^2.7.3",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "tw-animate-css": "^1.2.5",
    "vaul": "^1.1.2",
    "vite-plugin-pwa": "^1.0.2",
    "wait-on": "^8.0.4",
    "workbox-window": "^7.3.0",
    "wouter": "^3.3.5",
    "ws": "^8.18.0",
    "zod": "^3.24.2",
    "zod-validation-error": "^3.4.0",
    "zustand": "^5.0.7"
  },
  "devDependencies": {
    "@replit/vite-plugin-cartographer": "^0.2.7",
    "@replit/vite-plugin-runtime-error-modal": "^0.0.3",
    "@tailwindcss/typography": "^0.5.15",
    "@tailwindcss/vite": "^4.1.3",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/better-sqlite3": "^7.6.13",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/cookie-parser": "^1.4.9",
    "@types/cors": "^2.8.19",
    "@types/csurf": "^1.11.5",
    "@types/express": "4.17.21",
    "@types/express-session": "^1.18.0",
    "@types/helmet": "^0.0.48",
    "@types/node": "20.16.11",
    "@types/nodemailer": "^6.4.17",
    "@types/passport": "^1.0.16",
    "@types/passport-local": "^1.0.38",
    "@types/react": "^18.3.11",
    "@types/react-dom": "^18.3.1",
    "@types/supertest": "^6.0.2",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "@types/ws": "^8.5.13",
    "@typescript-eslint/eslint-plugin": "^8.39.1",
    "@typescript-eslint/parser": "^8.39.1",
    "@vitejs/plugin-react": "^4.3.2",
    "@vitest/ui": "^3.2.4",
    "autoprefixer": "^10.4.20",
    "chalk": "^5.3.0",
    "cross-env": "^10.0.0",
    "drizzle-kit": "^0.31.4",
    "esbuild": "^0.25.0",
    "eslint": "^9.32.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-security": "^2.1.1",
    "glob": "^11.0.3",
    "ink-docstrap": "^1.3.2",
    "jsdoc": "^4.0.2",
    "jsdom": "^26.1.0",
    "postcss": "^8.4.47",
    "tailwindcss": "^4.1.11",
    "tsx": "^4.20.3",
    "typescript": "5.6.3",
    "vite": "^6.3.5",
    "vitest": "^3.2.4"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8"
  }
}
